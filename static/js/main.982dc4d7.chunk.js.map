{"version":3,"sources":["config.ts","stores/User.ts","stores/Users.ts","stores/index.ts","components/PrivateRoute/index.tsx","utils/history.ts","components/AppLoading/index.tsx","containers/Admin/index.tsx","actions/users.ts","containers/Header/index.tsx","containers/Hero/index.jsx","containers/Products/index.tsx","containers/Home/index.tsx","containers/App/index.tsx","serviceWorker.ts","index.tsx","containers/Products/styles.module.scss","containers/Hero/styles.module.scss","containers/Header/styles.module.scss","components/AppLoading/styles.module.scss","containers/Home/styles.module.scss","sources/images/Layer.png"],"names":["api","axios","create","baseURL","process","REACT_APP_HOST","interceptors","response","use","error","Promise","reject","makeAutoObservable","this","name","user","observable","id","company","action","userInfo","computed","reaction","users","_","console","log","toJS","length","a","configure","enforceActions","RootStore","usersStore","userStore","rootStore","StoreContext","createContext","observer","props","allow","store","useContext","Error","useStore","message","warning","to","redirectTo","createBrowserHistory","AppLoading","className","styles","loading","Admin","React","Component","setUser","setInfo","localStorage","setItem","JSON","stringify","authUser","userStr","getItem","parse","Header","container","header","logo","href","src","navList","navItem","navLink","sotialList","sotialLink","sotiaIconSvg","Hero","welcome","heroTitle","titleText","shopNow","type","readMore","Products","productsList","productsItem1","productsTitle","productsImage1","LayerImg","productsItem2","productsImage2","productsItem3","productsImage3","Home","headerHeroContainer","App","state","initialized","componentDidMount","loadUser","userActions","setState","render","history","roles","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.982dc4d7.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.REACT_APP_HOST,\r\n})\r\n\r\n// here you can define constant's for project or inintial configuration for packages\r\n\r\n// response middleware\r\napi.interceptors.response.use(\r\n  response => {\r\n    // here you can check authorized user or not (401) or something global response functions\r\n    return response\r\n  },\r\n  error => {\r\n    // api error handler\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  reaction,\r\n  makeAutoObservable,\r\n} from 'mobx'\r\nimport { IUser } from '../models'\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    // reaction(\r\n    //   () => this.user,\r\n    //   _ => console.log(this.user)\r\n    // )\r\n  }\r\n\r\n  @observable user: IUser = { id: 0, name: '', company: { name: '' } }\r\n\r\n  @action setInfo = (userInfo: IUser): void => {\r\n    this.user = userInfo\r\n  }\r\n\r\n  @action unSetInfo = (): void => {\r\n    this.user = { id: 0, name: '', company: { name: '' } }\r\n  }\r\n\r\n  @computed get info(): any {\r\n    return {\r\n      name: this.user.name,\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UserStore()\r\n","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  reaction,\r\n  makeAutoObservable,\r\n  toJS,\r\n} from 'mobx'\r\nimport { IUser } from '../models'\r\n\r\nclass UsersStore {\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n      () => this.users,\r\n      _ => console.log(toJS(this.users))\r\n    )\r\n  }\r\n\r\n  @observable users: IUser[] = []\r\n\r\n  @action setInfo = async (userInfo: IUser[]): Promise<void> => {\r\n    this.users = userInfo\r\n  }\r\n\r\n  @action unSetInfo = (): void => {\r\n    this.users = []\r\n  }\r\n\r\n  @computed get info(): any {\r\n    return {\r\n      length: this.users.length,\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UsersStore()\r\n","import { createContext, useContext } from 'react'\r\nimport { configure, observable } from 'mobx'\r\n\r\nimport userStore from './User'\r\nimport usersStore from './Users'\r\n\r\nconfigure({ enforceActions: 'observed' })\r\n\r\nclass RootStore {\r\n  @observable usersStore = usersStore\r\n  @observable userStore = userStore\r\n  \r\n}\r\n\r\nconst rootStore = new RootStore()\r\n\r\nexport const StoreContext = createContext<RootStore>(rootStore)\r\n\r\nexport const useStore = (): RootStore => {\r\n  const store = useContext(StoreContext)\r\n  if (!store) {\r\n    throw new Error('You have forgot to use StoreProvider, shame on you.')\r\n  }\r\n  return store\r\n}\r\n\r\nexport default new RootStore()\r\n","import * as React from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router'\r\nimport { message } from 'antd'\r\nimport { observer } from 'mobx-react'\r\n\r\nimport { useStore } from 'stores'\r\ninterface IProps {\r\n  roles: string[]\r\n  message?: string\r\n  redirectTo?: string | object\r\n}\r\n\r\nexport const PrivateRoute = (props: RouteProps & IProps): React.ReactElement => {\r\n  const { userStore } = useStore()\r\n  const { user } = userStore\r\n\r\n  let allow = false\r\n\r\n  allow = !!(user.id && user.id === 1)\r\n\r\n  if (!allow)\r\n    message.warning(message ? message : `You have not access to this page`)\r\n\r\n  return allow ? (\r\n    <Route {...props} />\r\n  ) : (\r\n    <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n  )\r\n}\r\n\r\nexport default observer(PrivateRoute)\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst AppLoading: React.FC = () => (\r\n  <div className={styles.loading}>\r\n    <span>Application is loading, please wait...</span>\r\n  </div>\r\n)\r\n\r\nexport default AppLoading\r\n","import React from 'react'\r\n\r\nclass Admin extends React.Component {\r\n  render(): React.ReactElement {\r\n    return <p>Admin</p>\r\n  }\r\n}\r\n\r\nexport default Admin\r\n","import { api } from '../config'\r\nimport { IUser } from 'models/user'\r\n\r\nimport history from 'utils/history'\r\n\r\nimport store from '../stores'\r\n\r\nconst { userStore, usersStore } = store\r\n\r\n// common http request\r\nexport async function getUser(id: number): Promise<IUser> {\r\n  const res = await api.get(`/users/${id}`)\r\n  if (res.status !== 200) throw new Error(`Can't fetch user by id ${id}`)\r\n\r\n  return res.data\r\n}\r\n\r\n// http request + mobx store\r\nexport async function getUsers(): Promise<void> {\r\n  const res = await api.get('/users')\r\n  if (res.status !== 200) throw new Error(`Can't fetch user list`)\r\n  usersStore.setInfo(res.data)\r\n}\r\n\r\n// common mobx action\r\nexport function setUser(user: IUser): void {\r\n  userStore.setInfo(user)\r\n  localStorage.setItem('user', JSON.stringify(user))\r\n}\r\n\r\nexport function unsetUser(): void {\r\n  userStore.unSetInfo()\r\n  localStorage.removeItem('user')\r\n  history.replace('/login')\r\n}\r\n\r\nexport async function authUser(): Promise<IUser | null> {\r\n  try {\r\n    const userStr: string | null = localStorage.getItem('user')\r\n    if (!userStr) return null\r\n\r\n    const user = JSON.parse(userStr)\r\n    setUser(user)\r\n\r\n    return user\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport styles from './styles.module.scss'\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.header}>\r\n          <a className={styles.logo} href=\"\">\r\n            Logo\r\n            <img src=\"../../sources/images/Vector_Smart_Object.png\"></img>\r\n            {/* <svg className=\"logoIconSvg\" width=\"154\" height=\"59\">\r\n          <use href=\"../icons/Vector_Smart_Object.png\"></use>\r\n        </svg> */}\r\n          </a>\r\n          <ul className={styles.navList}>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                Home{' '}\r\n              </a>\r\n            </li>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                Pages{' '}\r\n              </a>\r\n            </li>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                Blog{' '}\r\n              </a>\r\n            </li>\r\n            <li className={styles.navItem}>\r\n              <a className={styles.navLink} href=\"\">\r\n                Contact{' '}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul className={styles.sotialList}>\r\n            <li className=\"sotialItem\">\r\n              <a className={styles.sotialLink}>\r\n                <svg className={styles.sotiaIconSvg}>\r\n                  <use href=\"\"></use>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li className=\"sotialItem\">\r\n              <a className={styles.sotialLink}>\r\n                <svg className={styles.sotiaIconSvg}>\r\n                  <use href=\"\"></use>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li className=\"sotialItem\">\r\n              <a className={styles.sotialLink}>\r\n                <svg className={styles.sotiaIconSvg}>\r\n                  <use href=\"\"></use>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n            <li className=\"sotialItem\">\r\n              <a className={styles.sotialLink}>\r\n                <svg className={styles.sotiaIconSvg}>\r\n                  <use href=\"\"></use>\r\n                </svg>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport styles from './styles.module.scss'\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.welcome}>Welcome To Our Grocery Store</h2>\r\n        <h1 className={styles.heroTitle}>Shop Online For Fresh Grocries</h1>\r\n        <p className={styles.titleText}>Duis aute irure dolor in reprehenderit in voluptate\r\n          velit esse cillum dolore eu fugiat nulla pariatur. </p>\r\n          <button className={styles.shopNow} type='button'>Shop now</button>\r\n          <button className={styles.readMore} type='button'>Read More</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;","import * as React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport LayerImg from '../../sources/images/Layer.png'\r\n\r\nconst Products = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <ul className={styles.productsList}>\r\n          <li className={styles.productsItem1}>\r\n            <h3 className={styles.productsTitle}>Get Every  Vegetable You Need</h3>\r\n            <a className={styles.shopNow} href=\"\">Shop now -></a>\r\n            <img className={styles.productsImage1} src={LayerImg}></img>\r\n          </li>\r\n          <li className={styles.productsItem2}>\r\n            <h3 className={styles.productsTitle}>We Have Best Beverages Collection</h3>\r\n            <a className={styles.shopNow} href=\"\">Shop now -></a>\r\n            <img className={styles.productsImage2} src='../../sources/images/Layer2.png'></img>\r\n          </li>\r\n          <li className={styles.productsItem3}>\r\n            <h3 className={styles.productsTitle}>Beauty And Health Products</h3>\r\n            <a className={styles.shopNow} href=\"\">Shop now -></a>\r\n            <img className={styles.productsImage3} src='../../sources/images/Layer3.png'></img>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import * as React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Header from '../Header/index'\r\nimport Hero from '../Hero/index'\r\nimport Products from '../Products/index'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.headerHeroContainer}>\r\n        <Header />\r\n        <Hero />\r\n      </div>\r\n      <Products />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Router, Switch, Route } from 'react-router'\r\nimport PrivateRoute from 'components/PrivateRoute'\r\nimport { Provider } from 'mobx-react'\r\nimport history from 'utils/history'\r\nimport AppLoading from 'components/AppLoading'\r\nimport Public from '../Public'\r\nimport Admin from '../Admin'\r\nimport store from 'stores'\r\nimport * as userActions from 'actions/users'\r\nimport Home from '../Home/index'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    initialized: false,\r\n  }\r\n\r\n  componentDidMount = (): void => {\r\n    this.loadUser()\r\n  }\r\n\r\n  loadUser = async (): Promise<void> => {\r\n    try {\r\n      await userActions.authUser()\r\n    } catch (e) {\r\n      console.log(e)\r\n    } finally {\r\n      this.setState({ initialized: true })\r\n    }\r\n  }\r\n\r\n  render = (): JSX.Element => {\r\n    return (\r\n      <Provider {...store}>\r\n        {this.state.initialized ? (\r\n          <Router history={history}>\r\n            <Switch>\r\n              <PrivateRoute roles={['admin']} path=\"/admin\" component={Admin} />\r\n              {/* <Route path=\"/\" component={Public} /> */}\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n          </Router>\r\n        ) : (\r\n          <AppLoading />\r\n        )}\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    )\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import './config'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// normalize and basic styles for application\r\nimport 'normalize.css'\r\nimport 'antd/dist/antd.css'\r\nimport 'sources/styles/styles.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2n8-n\",\"productsList\":\"styles_productsList__1KoOS\",\"productsItem1\":\"styles_productsItem1__1TuDF\",\"productsImage1\":\"styles_productsImage1__3n4DO\",\"productsItem2\":\"styles_productsItem2__16Wod\",\"productsImage2\":\"styles_productsImage2__2mFCe\",\"productsItem3\":\"styles_productsItem3__3uyrm\",\"productsImage3\":\"styles_productsImage3__1mzOp\",\"productsTitle\":\"styles_productsTitle__3_aic\",\"shopNow\":\"styles_shopNow__3VwZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2XiNy\",\"welcome\":\"styles_welcome__1A0Wg\",\"heroTitle\":\"styles_heroTitle__299NS\",\"titleText\":\"styles_titleText__2b_he\",\"shopNow\":\"styles_shopNow__2IgO4\",\"readMore\":\"styles_readMore__20QNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__-iaIN\",\"header\":\"styles_header__xFwVz\",\"logo\":\"styles_logo__34ehM\",\"navList\":\"styles_navList__2ucMB\",\"navItem\":\"styles_navItem__24-FB\",\"navLink\":\"styles_navLink__vE8_P\",\"sotialList\":\"styles_sotialList__2iCZb\",\"sotialLink\":\"styles_sotialLink__k_gCF\",\"sotiaIconSvg\":\"styles_sotiaIconSvg__1ShAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__1i3pX\",\"Gradient\":\"styles_Gradient__p00Ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerHeroContainer\":\"styles_headerHeroContainer__2VLLD\"};","module.exports = __webpack_public_path__ + \"static/media/Layer.e0ed080b.png\";"],"sourceRoot":""}